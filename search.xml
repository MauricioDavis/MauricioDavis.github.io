<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>固件仿真流程</title>
      <link href="/2023/03/23/%E5%9B%BA%E4%BB%B6%E4%BB%BF%E7%9C%9F%E6%B5%81%E7%A8%8B/"/>
      <url>/2023/03/23/%E5%9B%BA%E4%BB%B6%E4%BB%BF%E7%9C%9F%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p><em>这边采用的是buildroot+qemu的方式进行环境搭建</em></p><h5 id="buildroot"><a href="#buildroot" class="headerlink" title="buildroot"></a>buildroot</h5><p><strong>buildroot</strong>：Buildroot 是 Linux 平台上一个构建嵌入式 Linux 系统的框架，我们可以使用该框架进行仿真固件</p><ul><li>可以使用buildroot自带的配置文件<code>buildroot/config</code>选择对应的配置<code>make 配置文件名</code>程序就会自动下载所需要的文件并编译，make输出的文件会在outputs文件下，自动生成的运行脚本在<code>buildroot/outputs/images</code></li></ul><p><img src="https://s2.loli.net/2023/03/23/i2XwRmG8onWg1cN.png"></p><ul><li>也可以通过<code>make menuconfig</code>进行类似内核编译前配置的界面对所需要的功能进行选择，save后，make进行编译即可</li></ul><p><img src="https://s2.loli.net/2023/03/23/UTpbZhAFKfumJ2s.png"></p><p>笔者这边使用的就是buildroot自动下载好的文件以及运行脚本(buildroot生成的运行脚本也是基于使用qemu进行模拟的)，固件模拟环境可能需要我们改动一下配置文件才能实现qemu虚拟机和主机互通或者实现自己需要的需求，一般情况<code>make menuconfig</code>里面都可以选择</p><h5 id="qemu虚拟机与虚拟机互通"><a href="#qemu虚拟机与虚拟机互通" class="headerlink" title="qemu虚拟机与虚拟机互通"></a>qemu虚拟机与虚拟机互通</h5><p>目的为可以让虚拟机访问固件启动的web页面和gdbserver调试</p><p><strong>相关介绍一</strong></p><p>tap&#x2F;tun接口：运行在内核的虚拟机接口，我们在搭建的时候就是通过tun口进行交互，tap会输出完整的以太网帧，tun会输出ip报头，搭建的时候使用tunctl创建tun口</p><p><a href="https://www.zhaohuabing.com/post/2020-02-24-linux-taptun/">tun&#x2F;tap详细介绍和使用其实现一些功能</a></p><ol><li>自己编写一个启动脚本，使用brctl创建虚拟网桥并配置ip地址</li><li>使用tunctl创建名为tap0的tun接口并配置ip</li><li>将tap0口接入虚拟网桥</li><li>我们还需要将buildroot自动生成的启动脚本与tap0口相连</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/bin/sh</span></span><br><span class="line">sudo brctl addbr virbr0</span><br><span class="line">sudo ifconfig virbr0 192.168.247.55/24 up</span><br><span class="line">sudo tunctl -t tap0</span><br><span class="line">sudo ifconfig tap0 192.168.247.56/24 up</span><br><span class="line">sudo brctl addif virbr0 tap0</span><br><span class="line">sudo ./start-qemu.sh</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">(</span><br><span class="line">BINARIES_DIR=<span class="string">&quot;<span class="variable">$&#123;0%/*&#125;</span>/&quot;</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$&#123;BINARIES_DIR&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;1&#125;</span>&quot;</span> = <span class="string">&quot;serial-only&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    EXTRA_ARGS=<span class="string">&#x27;-nographic&#x27;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    EXTRA_ARGS=<span class="string">&#x27;-serial stdio&#x27;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;/home/davis/buildroot/output/host/bin:<span class="variable">$&#123;PATH&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">exec</span> qemu-system-mipsel -M malta -kernel vmlinux</span><br><span class="line">-drive file=rootfs.ext2,format=raw -append <span class="string">&quot;rootwait root=/dev/sda&quot;</span> </span><br><span class="line">-drive file=/share.img,format=raw  -net nic,macaddr=00:16:3e:00:00:01 </span><br><span class="line">-net user  </span><br><span class="line">-net tap,ifname=tap0,script=no,downscript=no  <span class="variable">$&#123;EXTRA_ARGS&#125;</span></span><br><span class="line">)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>完成上述操作后就可以ping通虚拟机了</p><h5 id="qemu虚拟机与虚拟机传输文件"><a href="#qemu虚拟机与虚拟机传输文件" class="headerlink" title="qemu虚拟机与虚拟机传输文件"></a>qemu虚拟机与虚拟机传输文件</h5><p>wait a minuet ：说这个的原因是因为，笔者这边使用buildroot自生成的脚本运行，竟然没有service指令，那就开不了ssh，加之有没有网，所以这边使用mount挂载的方式传输</p><ol><li><p>可以使用<code>qemu-img</code>创建或者使用<code>dd</code>命令创建<br>eg：<code>qemu-img xxx.img 500m</code>    或者     <code>dd if=/dev/zero of=./xxx.img bs=1M count=500</code></p></li><li><p>使用<code>mkfs.ext4/ext2  xxx.img</code> 进行格式化</p></li><li><p>mount将xxx.img挂载到一个文件夹下，可以在&#x2F;tmp&#x2F; 随便创建一个挂载，此时将需要传输的文件放入该文件夹</p></li><li><p>修改qemu启动时的参数加入这个xxx.img文件作为一块硬盘，参考上面的运行脚本</p></li><li><p>使用fdisk -l查看加入的硬盘名字挂载到&#x2F;dev&#x2F;sdx</p></li></ol><p><img src="https://s2.loli.net/2023/03/23/UFQ9MSKH1mC5byf.png"></p><ol start="7"><li>在qemu虚拟机中使用<code>mount -t ext4（如果mkfs格式化为ext4的话） /xxx</code><br>将其挂载到&#x2F;xxx，具体看你想挂载到哪里</li><li>此时qemu虚拟机里就有对应的文件了</li></ol><p>[mount指令详解](<a href="https://cloud.tencent.com/developer/article/2066731?from=15425&areaSource=102001.1&traceId=l2kBkZlnO3s1USUbw9FDx">mount 命令(二) —— mount 命令介绍 - 腾讯云开发者社区-腾讯云 (tencent.com)</a>)<br><a href="%5B(31%E6%9D%A1%E6%B6%88%E6%81%AF">qemu虚拟机与宿主机使用mount进行文件传输</a> linux内核调度 宿主机,Qemu虚拟机与宿主机之间文件传输_傅奇的博客-CSDN博客](<a href="https://blog.csdn.net/weixin_36179469/article/details/116775194">https://blog.csdn.net/weixin_36179469/article/details/116775194</a>))</p>]]></content>
      
      
      
        <tags>
            
            <tag> 固件仿真 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/03/11/hello-world/"/>
      <url>/2023/03/11/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
